{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Nouveau dossier\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport shot from './picture.png';\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport Data from './data/data.json';\nimport { render } from '@testing-library/react'; // this will show the info it in firebug console\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst runCallback = cb => {\n  return cb();\n};\n\nconst GSheetReader = require('g-sheets-api');\n\nconst options = {\n  apiKey: 'AIzaSyCzP1ql7SBKHpBrCjJz8KkrTNGg0p_ZbUg',\n  sheetId: '2PACX-1vRysNx_i5y3dWAZSDP5hNCm9UkcfbSNClxKx1bWhTqrgWZJcjHlIYTPhx8M1dhxv3uMSU_Lw5tSkYPs',\n  sheetNumber: 1,\n  // if sheetName is supplied, this will take precedence over sheetNumber\n  returnAllResults: false\n  /* filter: {\n     'department': 'archaeology',\n     'module description': 'introduction'\n   },\n   filterOptions: {\n     operator: 'or',\n     matching: 'loose'\n   }*/\n\n};\nGSheetReader(options, results => {// do something with the results here\n}, error => {// OPTIONAL: handle errors here\n});\n\nfunction App() {\n  _s();\n\n  const [Datas, setData] = useState([]);\n  var i = 0;\n  const nombreMax = 13; //*GSheetReader(options,results);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Affichage des scores en direct !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), runCallback(() => {\n        console.log(options);\n        const row = [];\n\n        for (var i = 0; i < nombreMax; i++) {\n          row.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"rectangleName\",\n            children: [\"Nom d'Equipe\", /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"rectangleScore\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 24\n          }, this)); //*row.push();   \n\n          ;\n        }\n\n        return row;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n/*<a\n  className=\"App-link\"\n  href=\"https://reactjs.org\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  Learn React\n</a>*/\n\n\n_s(App, \"NXRFidLtsVMyyVaEjcFocEBvOCQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/Nouveau dossier/my-app/src/App.js"],"names":["shot","React","useState","Data","render","runCallback","cb","GSheetReader","require","options","apiKey","sheetId","sheetNumber","returnAllResults","results","error","App","Datas","setData","i","nombreMax","logo","console","log","row","push"],"mappings":";;;;AACA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB,C,CAGC;;;;AAGC,MAAMC,WAAW,GAAIC,EAAD,IAAQ;AAC1B,SAAOA,EAAE,EAAT;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AAGA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,OAAO,EAAE,wFAFG;AAIZC,EAAAA,WAAW,EAAE,CAJD;AAKX;AACDC,EAAAA,gBAAgB,EAAE;AACnB;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAdkB,CAAhB;AAkBFN,YAAY,CACVE,OADU,EAEVK,OAAO,IAAI,CACT;AACD,CAJS,EAKVC,KAAK,IAAI,CACP;AACD,CAPS,CAAZ;;AAiBA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAAEC,KAAF,EAASC,OAAT,IAAqBhB,QAAQ,CAAC,EAAD,CAAnC;AACA,MAAIiB,CAAC,GAAG,CAAR;AACA,QAAMC,SAAS,GAAG,EAAlB,CALa,CAQb;;AACA,sBAKE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAWIhB,WAAW,CAAC,MAAM;AAChBiB,QAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,cAAMe,GAAG,GAAG,EAAZ;;AACA,aAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAApB,EAA+BD,CAAC,EAAhC,EAAoC;AAElCK,UAAAA,GAAG,CAACC,IAAJ,eAAS;AAAG,YAAA,KAAK,EAAC,eAAT;AAAA,oDAAqC;AAAG,cAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAT,EAFkC,CAGlC;;AACA;AACD;;AACD,eAAOD,GAAP;AAGD,OAZU,CAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UALF;AAwCD;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzDSR,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport shot from './picture.png';\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport Data from './data/data.json';\nimport { render } from '@testing-library/react';\n\n\n // this will show the info it in firebug console\n\n\n  const runCallback = (cb) => {\n    return cb();\n  };\n\n  const GSheetReader = require('g-sheets-api');\n\n\n  const options = {\n      apiKey: 'AIzaSyCzP1ql7SBKHpBrCjJz8KkrTNGg0p_ZbUg',\n      sheetId: '2PACX-1vRysNx_i5y3dWAZSDP5hNCm9UkcfbSNClxKx1bWhTqrgWZJcjHlIYTPhx8M1dhxv3uMSU_Lw5tSkYPs',\n      \n      sheetNumber: 1,\n       // if sheetName is supplied, this will take precedence over sheetNumber\n      returnAllResults: false,\n     /* filter: {\n        'department': 'archaeology',\n        'module description': 'introduction'\n      },\n      filterOptions: {\n        operator: 'or',\n        matching: 'loose'\n      }*/\n    }\n\n\nGSheetReader(\n  options,\n  results => {\n    // do something with the results here\n  },\n  error => {\n    // OPTIONAL: handle errors here\n  }\n  \n);\n\n\n\n\n\n\n\nfunction App() {\n\n  \n  const [ Datas, setData ] = useState([]);\n  var i = 0;\n  const nombreMax = 13;\n\n\n  //*GSheetReader(options,results);\n  return (\n\n    \n    \n\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Affichage des scores en direct !\n        </p>\n    \n\n\n\n\n        {\n          runCallback(() => {\n            console.log(options);\n            const row = [];\n            for (var i = 0; i < nombreMax; i++) {\n              \n              row.push(<p class=\"rectangleName\">Nom d'Equipe<p class=\"rectangleScore\">0</p></p>);\n              //*row.push();   \n              ;\n            }\n            return row;\n             \n            \n          })\n        }\n\n      </header>\n    </div>\n      \n\n  );\n\n\n}\n        /*<a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>*/\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}