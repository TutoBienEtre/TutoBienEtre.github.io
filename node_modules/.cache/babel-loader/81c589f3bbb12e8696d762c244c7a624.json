{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Nouveau dossier\\\\my-app\\\\src\\\\CsvJSON.js\";\nimport App from './App';\nimport $ from 'jquery';\nimport choses from './data/data.csv';\nimport React, { Component } from 'react';\nimport { readRemoteFile } from 'react-papaparse';\nimport { useState } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ReadRemoteFile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      readRemoteFile('https://docs.google.com/spreadsheets/d/e/2PACX-1vRXi-TcKwaEYai8I5dCjOKlaMJ7AR7E5TCAq72muzObYC-YDHQahJvuvhGLYl3z0A/pub?gid=191056284&single=true&output=csv', {\n        complete: results => {\n          console.log('Results:', results);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.handleClick,\n      children: \"readRemoteFile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction download(content, fileName, contentType) {\n  var a = document.createElement(\"a\");\n  var file = new Blob([content], {\n    type: contentType\n  });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}\n\nconst csv = [[\"1-1\", \"1-2\", \"1-3\"], [\"2-1\", \"2-2\", \"2-3\"]]; //var csv is the CSV file with headers\n\nfunction CsvJSON(csv) {\n  //*var csv = choses;\n  var lines = csv.toString().split(\"\\n\");\n  var result = [];\n  var headers = lines[0].split(\",\");\n\n  for (var i = 1; i < lines.length; i++) {\n    var obj = {};\n    var currentline = lines[i].split(\",\");\n\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j];\n    }\n\n    result.push(obj);\n  }\n\n  console.log(csv);\n  console.log(choses); //return result; //JavaScript object\n\n  JSON.stringify(result); //JSON\n\n  console.log(csv[1]);\n\n  var csv = require('./data/data.json');\n\n  console.log(csv); //download(result, 'json.txt', 'text/plain');\n\n  return result;\n} //export default CsvJSON ;\n\n\n_c = CsvJSON;\n\nvar _c;\n\n$RefreshReg$(_c, \"CsvJSON\");","map":{"version":3,"sources":["D:/Desktop/Nouveau dossier/my-app/src/CsvJSON.js"],"names":["App","$","choses","React","Component","readRemoteFile","useState","CSVReader","ReadRemoteFile","handleClick","complete","results","console","log","render","download","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","click","csv","CsvJSON","lines","toString","split","result","headers","i","length","obj","currentline","j","push","JSON","stringify","require"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACpDK,WADoD,GACtC,MAAM;AAClBJ,MAAAA,cAAc,CAAC,4JAAD,EAA+J;AAC3KK,QAAAA,QAAQ,EAAGC,OAAD,IAAa;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB;AACD;AAH0K,OAA/J,CAAd;AAKD,KAPmD;AAAA;;AASpDG,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,OAAO,EAAE,KAAKL,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAXmD;;AAetD,SAASM,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkD;AAChD,MAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACP,OAAD,CAAT,EAAoB;AAACQ,IAAAA,IAAI,EAAEN;AAAP,GAApB,CAAX;AACAC,EAAAA,CAAC,CAACM,IAAF,GAASC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAT;AACAH,EAAAA,CAAC,CAACJ,QAAF,GAAaE,QAAb;AACAE,EAAAA,CAAC,CAACS,KAAF;AACD;;AAED,MAAMC,GAAG,GAAG,CACV,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CADU,EAEV,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAFU,CAAZ,C,CAOA;;AACA,SAASC,OAAT,CAAiBD,GAAjB,EAAqB;AACnB;AACA,MAAIE,KAAK,GAACF,GAAG,CAACG,QAAJ,GAAeC,KAAf,CAAqB,IAArB,CAAV;AAEA,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIC,OAAO,GAACJ,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,GAAf,CAAZ;;AAEA,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,KAAK,CAACM,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAE9B,QAAIE,GAAG,GAAG,EAAV;AACA,QAAIC,WAAW,GAACR,KAAK,CAACK,CAAD,CAAL,CAASH,KAAT,CAAe,GAAf,CAAhB;;AAEA,SAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,OAAO,CAACE,MAAtB,EAA6BG,CAAC,EAA9B,EAAiC;AAChCF,MAAAA,GAAG,CAACH,OAAO,CAACK,CAAD,CAAR,CAAH,GAAkBD,WAAW,CAACC,CAAD,CAA7B;AACA;;AAEDN,IAAAA,MAAM,CAACO,IAAP,CAAYH,GAAZ;AAEA;;AACD1B,EAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ,EArBmB,CAuBnB;;AACAwC,EAAAA,IAAI,CAACC,SAAL,CAAeT,MAAf,EAxBmB,CAwBK;;AACxBtB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAG,CAAC,CAAD,CAAf;;AAEA,MAAIA,GAAG,GAAGe,OAAO,CAAC,kBAAD,CAAjB;;AACAhC,EAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ,EA5BmB,CA6BnB;;AACA,SAAOK,MAAP;AAGD,C,CACD;;;KAlCSJ,O","sourcesContent":["import App from './App';\r\nimport $ from 'jquery';\r\nimport choses from './data/data.csv';\r\nimport React, { Component } from 'react';\r\nimport { readRemoteFile } from 'react-papaparse';\r\nimport { useState } from 'react';\r\n\r\nimport CSVReader from 'react-csv-reader';\r\n\r\nexport default class ReadRemoteFile extends Component {\r\n  handleClick = () => {\r\n    readRemoteFile('https://docs.google.com/spreadsheets/d/e/2PACX-1vRXi-TcKwaEYai8I5dCjOKlaMJ7AR7E5TCAq72muzObYC-YDHQahJvuvhGLYl3z0A/pub?gid=191056284&single=true&output=csv', {\r\n      complete: (results) => {\r\n        console.log('Results:', results);\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div onClick={this.handleClick}>readRemoteFile</div>;\r\n  }\r\n}\r\n\r\n\r\nfunction download(content, fileName, contentType) {\r\n  var a = document.createElement(\"a\");\r\n  var file = new Blob([content], {type: contentType});\r\n  a.href = URL.createObjectURL(file);\r\n  a.download = fileName;\r\n  a.click();\r\n}\r\n\r\nconst csv = [\r\n  [\"1-1\", \"1-2\", \"1-3\"],\r\n  [\"2-1\", \"2-2\", \"2-3\"]\r\n]\r\n\r\n\r\n\r\n//var csv is the CSV file with headers\r\nfunction CsvJSON(csv){\r\n  //*var csv = choses;\r\n  var lines=csv.toString().split(\"\\n\");\r\n\r\n  var result = [];\r\n\r\n  var headers=lines[0].split(\",\");\r\n\r\n  for(var i=1;i<lines.length;i++){\r\n\r\n\t  var obj = {};\r\n\t  var currentline=lines[i].split(\",\");\r\n\r\n\t  for(var j=0;j<headers.length;j++){\r\n\t\t  obj[headers[j]] = currentline[j];\r\n\t  }\r\n\r\n\t  result.push(obj);\r\n\r\n  }\r\n  console.log(csv);\r\n  console.log(choses);\r\n  \r\n  //return result; //JavaScript object\r\n  JSON.stringify(result); //JSON\r\n  console.log(csv[1]);\r\n\r\n  var csv = require('./data/data.json');\r\n  console.log(csv);\r\n  //download(result, 'json.txt', 'text/plain');\r\n  return result;\r\n  \r\n\r\n}\r\n//export default CsvJSON ;"]},"metadata":{},"sourceType":"module"}