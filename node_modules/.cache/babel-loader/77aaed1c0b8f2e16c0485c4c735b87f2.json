{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Nouveau dossier\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport shot from './picture.png';\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport Data from './data/data.json';\nimport { render } from '@testing-library/react';\nimport './data/data.csv';\nimport $ from 'jquery'; // this will show the info it in firebug console\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar csv = './data/data.csv';\n\nconst runCallback = cb => {\n  return cb();\n};\n/* const GSheetReader = require('g-sheets-api');\n \n  const options = {\n     apiKey: 'AIzaSyCzP1ql7SBKHpBrCjJz8KkrTNGg0p_ZbUg',\n     sheetId: '1hdfl1sQyJZ3mDKzjyTt77PpAXxQFRheFFdXRknsHOWc',\n     \n     //sheetNumber: 1,\n      // if sheetName is supplied, this will take precedence over sheetNumber\n     returnAllResults: true,\n    /* filter: {\n       'department': 'archaeology',\n       'module description': 'introduction'\n     },\n     filterOptions: {\n       operator: 'or',\n       matching: 'loose'\n     }\n   }\n\nGSheetReader(\n options,\n results => {\n   // do something with the results here\n },\n error => {\n   // OPTIONAL: handle errors here\n }\n \n);*/\n\n\n$(document).ready(function () {\n  $.ajax({\n    type: \"GET\",\n    url: \"./data/data.csv\",\n    dataType: \"text\",\n    success: function (data) {\n      processData(data);\n    }\n  });\n});\n\nfunction processData(allText) {\n  var allTextLines = allText.split(/\\r\\n|\\n/);\n  var headers = allTextLines[0].split(',');\n  var lines = [];\n\n  for (var i = 1; i < allTextLines.length; i++) {\n    var data = allTextLines[i].split(',');\n\n    if (data.length == headers.length) {\n      var tarr = [];\n\n      for (var j = 0; j < headers.length; j++) {\n        tarr.push(headers[j] + \":\" + data[j]);\n      }\n\n      lines.push(tarr);\n    }\n  } // alert(lines);\n\n}\n/*\n//var csv is the CSV file with headers\nfunction csvJSON(csv){\n\n  var lines=csv.split(\"\\n\");\n\n  var result = [];\n\n  var headers=lines[0].split(\",\");\n\n  for(var i=1;i<lines.length;i++){\n\n\t  var obj = {};\n\t  var currentline=lines[i].split(\",\");\n\n\t  for(var j=0;j<headers.length;j++){\n\t\t  obj[headers[j]] = currentline[j];\n\t  }\n\n\t  result.push(obj);\n\n  }\n  \n  //return result; //JavaScript object\n  return JSON.stringify(result); //JSON\n}\n*/\n\n\nvar personne = {\n  nom: ['Jean', 'Martin'],\n  age: 32,\n  sexe: 'masculin',\n  interets: ['musique', 'skier']\n};\n\nfunction App() {\n  _s();\n\n  const [Datas, setData] = useState([]);\n  var i = 0;\n  const nombreMax = 13; //*GSheetReader(options,results);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Affichage des scores en direct !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), runCallback(() => {\n        console.log(Data.Points[1]);\n        const row = [];\n\n        for (var i = 0; i < nombreMax; i++) {\n          row.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"rectangleName\",\n            children: [\"Nom d'Equipe\", /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"rectangleScore\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 24\n          }, this)); //*row.push();   \n\n          ;\n        }\n\n        return row;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n/*<a\n  className=\"App-link\"\n  href=\"https://reactjs.org\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  Learn React\n</a>*/\n\n\n_s(App, \"NXRFidLtsVMyyVaEjcFocEBvOCQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/Nouveau dossier/my-app/src/App.js"],"names":["shot","React","useState","Data","render","$","csv","runCallback","cb","document","ready","ajax","type","url","dataType","success","data","processData","allText","allTextLines","split","headers","lines","i","length","tarr","j","push","personne","nom","age","sexe","interets","App","Datas","setData","nombreMax","logo","console","log","Points","row"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport shot from './picture.png';\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport Data from './data/data.json';\nimport { render } from '@testing-library/react';\nimport './data/data.csv';\nimport $ from 'jquery';\n\n // this will show the info it in firebug console\n\n  var csv = './data/data.csv';\n  \n  const runCallback = (cb) => {\n    return cb();\n  };\n\n /* const GSheetReader = require('g-sheets-api');\n  \n\n  const options = {\n      apiKey: 'AIzaSyCzP1ql7SBKHpBrCjJz8KkrTNGg0p_ZbUg',\n      sheetId: '1hdfl1sQyJZ3mDKzjyTt77PpAXxQFRheFFdXRknsHOWc',\n      \n      //sheetNumber: 1,\n       // if sheetName is supplied, this will take precedence over sheetNumber\n      returnAllResults: true,\n     /* filter: {\n        'department': 'archaeology',\n        'module description': 'introduction'\n      },\n      filterOptions: {\n        operator: 'or',\n        matching: 'loose'\n      }\n    }\n\n\nGSheetReader(\n  options,\n  results => {\n    // do something with the results here\n  },\n  error => {\n    // OPTIONAL: handle errors here\n  }\n  \n);*/\n\n\n$(document).ready(function() {\n  $.ajax({\n      type: \"GET\",\n      url: \"./data/data.csv\",\n      dataType: \"text\",\n      success: function(data) {processData(data);}\n   });\n});\n\nfunction processData(allText) {\n  var allTextLines = allText.split(/\\r\\n|\\n/);\n  var headers = allTextLines[0].split(',');\n  var lines = [];\n\n  for (var i=1; i<allTextLines.length; i++) {\n      var data = allTextLines[i].split(',');\n      if (data.length == headers.length) {\n\n          var tarr = [];\n          for (var j=0; j<headers.length; j++) {\n              tarr.push(headers[j]+\":\"+data[j]);\n          }\n          lines.push(tarr);\n      }\n  }\n  // alert(lines);\n}\n\n/*\n//var csv is the CSV file with headers\nfunction csvJSON(csv){\n\n  var lines=csv.split(\"\\n\");\n\n  var result = [];\n\n  var headers=lines[0].split(\",\");\n\n  for(var i=1;i<lines.length;i++){\n\n\t  var obj = {};\n\t  var currentline=lines[i].split(\",\");\n\n\t  for(var j=0;j<headers.length;j++){\n\t\t  obj[headers[j]] = currentline[j];\n\t  }\n\n\t  result.push(obj);\n\n  }\n  \n  //return result; //JavaScript object\n  return JSON.stringify(result); //JSON\n}\n*/\n\n\nvar personne = {\n\n  nom: ['Jean', 'Martin'],\n  age: 32,\n  sexe: 'masculin',\n  interets: ['musique', 'skier'],\n};\n\n\nfunction App() {\n\n  \n  const [ Datas, setData ] = useState([]);\n  var i = 0;\n  const nombreMax = 13;\n\n\n  //*GSheetReader(options,results);\n  return (\n\n    \n    \n\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Affichage des scores en direct !\n        </p>\n    \n\n\n\n\n        {\n          runCallback(() => {\n            console.log(Data.Points[1]);\n            const row = [];\n            for (var i = 0; i < nombreMax; i++) {\n              \n              row.push(<p class=\"rectangleName\">Nom d'Equipe<p class=\"rectangleScore\">0</p></p>);\n              //*row.push();   \n              ;\n            }\n            return row;\n             \n            \n          })\n        }\n\n      </header>\n    </div>\n      \n\n  );\n\n\n}\n        /*<a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>*/\n\n\nexport default App ;"]},"metadata":{},"sourceType":"module"}